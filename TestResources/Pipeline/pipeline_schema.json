{
    "$schema": "http://json-schema.org/draft-07/schema",
    "title": "Pipeline config",
    "description": "Graphics pipeline description file for Mix Engine",
    "type": "object",
    "definitions": {
        "shaderStage": {
            "type": "string",
            "enum": [
                "vert",
                "frag",
                "tesc",
                "tese",
                "geom"
            ]
        },
        "stencilOp": {
            "type": "string",
            "enum": [
                "Keep",
                "Zero",
                "Replace",
                "IncrementAndClamp",
                "DescrementAndClamp",
                "Invert",
                "IncrementAndWrap",
                "DescrementAndWarp"
            ]
        },
        "compareOp": {
            "type": "string",
            "enum": [
                "Never",
                "Less",
                "Equal",
                "LessOrEqual",
                "Greater",
                "NotEqual",
                "GreaterOrEqual",
                "Always"
            ]
        },
        "logicOp": {
            "type": "string",
            "enum": [
                "Clear",
                "And",
                "AndReverse",
                "Copy",
                "AndInverted",
                "NoOp",
                "Xor",
                "Or",
                "Nor",
                "Equivalent",
                "Invert",
                "OrReverse",
                "CopyInverted",
                "OrInverted",
                "Nand",
                "Set"
            ]
        },
        "blendFactor": {
            "type": "string",
            "enum": [
                "Zero",
                "One",
                "SrcColor",
                "OneMinusSrcColor",
                "DstColor",
                "OneMinusDstColor",
                "SrcAlpha",
                "OneMinusSrcAlpha",
                "DstAlpha",
                "OneMinusDstAlpha",
                "ConstantColor",
                "OneMinusConstantColor",
                "ConstantAlpha",
                "OneMinusConstantAlpha",
                "SrcAlphaSaturate",
                "Src1Color",
                "OneMinusSrc1Color",
                "Src1Alpha",
                "OneMinusSrc1Alpha"
            ]
        },
        "blendFunc": {
            "type": "object",
            "properties": {
                "srcFactor": {
                    "$ref": "#definitions/blendFactor"
                },
                "dstFactor": {
                    "$ref": "#definitions/blendFactor"
                },
                "blendOp": {
                    "type": "string",
                    "enum": [
                        "Add",
                        "Subtract",
                        "ReverseSubtract",
                        "Min",
                        "Max"
                    ]
                }
            },
            "required": [
                "srcFactor",
                "dstFactor",
                "blendOp"
            ]
        },
        "descriptor": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "Sampler",
                        "CombinedImageSampler",
                        "SampledImage",
                        "StorageImage",
                        "UniformTexelBuffer",
                        "StorageTexelBuffer",
                        "UniformBuffer",
                        "StorageBuffer",
                        "UniformBufferDynamic",
                        "StorageBufferDynamic",
                        "InputAttachment"
                    ]
                },
                "count": {
                    "type": "integer",
                    "minimum": 1
                },
                "stage": {
                    "$ref": "#definitions/shaderStage"
                }
            },
            "required": [
                "name",
                "type",
                "count",
                "stage"
            ]
        },
        "descriptorSet": {
            "type": "array",
            "items": {
                "$ref": "#definitions/descriptor"
            }
        },
        "format": {
            "type": "string",
            "enum": [
                "R32_Sfloat",
                "R32G32_Sfloat",
                "R32G32B32_Sfloat",
                "R32G32B32A32_Sfloat",
                "R32_Int",
                "R32G32_Int",
                "R32G32B32_Int",
                "R32G32B32A32_Int",
                "R32_Uint",
                "R32G32_Uint",
                "R32G32B32_Uint",
                "R32G32B32A32_Uint",
                "R8_Unorm",
                "R8G8_Unorm",
                "R8G8B8_Unorm",
                "R8G8B8A8_Unorm"
            ]
        },
        "topology": {
            "type": "string",
            "enum": [
                "PointList",
                "LineList",
                "LineStrip",
                "TriangleList",
                "TriangleStrip",
                "TriangleFan"
            ]
        }
    },
    "properties": {
        "$schema": {
            "type": "string"
        },
        "shaderStage": {
            "description": "Pathes of shader files used by this pipeline",
            "type": "object",
            "properties": {
                "vert": {
                    "description": "Vertex shader file path",
                    "type": "string"
                },
                "frag": {
                    "description": "Fragment shader file path",
                    "type": "string"
                },
                "tesc": {
                    "description": "Tessellation Control shader file path",
                    "type": "string"
                },
                "tese": {
                    "description": "Tessellation Evaluation shader file path",
                    "type": "string"
                },
                "geom": {
                    "description": "Geometry shader file path",
                    "type": "string"
                }
            },
            "required": [
                "vert"
            ]
        },
        "vertexInput": {
            "description": "Vertex input state",
            "definitions": {
                "binding": {
                    "type": "object",
                    "properties": {
                        "stride": {
                            "type": "integer",
                            "minimun": 0
                        },
                        "inputRate": {
                            "type": "string",
                            "enum": [
                                "vertex",
                                "instance"
                            ]
                        },
                        "attribute": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                                "type": "object",
                                "properties": {
                                    "format": {
                                        "$ref": "#definitions/format"
                                    },
                                    "offset": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "multipleOf": 4
                                    }
                                },
                                "required": [
                                    "format",
                                    "offset"
                                ]
                            }
                        }
                    },
                    "required": [
                        "stride",
                        "inputRate",
                        "attribute"
                    ]
                }
            },
            "type": "array",
            "items": {
                "$ref": "#properties/vertexInput/definitions/binding"
            }
        },
        "inputAssembly": {
            "title": "Vertex input assembly state",
            "type": "object",
            "properties": {
                "topology": {
                    "$ref": "#definitions/topology"
                },
                "primitiveRestart": {
                    "type": "boolean"
                }
            },
            "required": [
                "topology"
            ]
        },
        "rasterization": {
            "title": "Rasterization state",
            "type": "object",
            "properties": {
                "polygon": {
                    "type": "string",
                    "enum": [
                        "Fill",
                        "Line",
                        "Point"
                    ]
                },
                "cullMode": {
                    "type": "string",
                    "enum": [
                        "Front",
                        "Back",
                        "FrontAndBack",
                        "None"
                    ]
                },
                "frontFace": {
                    "type": "string",
                    "enum": [
                        "CounterClockWise",
                        "ClockWise"
                    ]
                },
                "lineWidth": {
                    "type": "number",
                    "minimum": 0.0,
                    "exclusiveMinimum": 0
                },
                "depthClamp": {
                    "type": "boolean"
                },
                "discard": {
                    "type": "boolean"
                },
                "depthBias": {
                    "type": "object",
                    "properties": {
                        "enable": {
                            "type": "boolean"
                        },
                        "constantFactor": {
                            "type": "number"
                        },
                        "clamp": {
                            "type": "number"
                        },
                        "slopeFactor": {
                            "type": "number"
                        }
                    },
                    "required": [
                        "enable",
                        "constantFactor",
                        "clamp",
                        "slopeFactor"
                    ]
                }
            }
        },
        "depthStencil": {
            "title": "Depth stencil state",
            "type": "object",
            "properties": {
                "depthTest": {
                    "type": "object",
                    "properties": {
                        "enable": {
                            "type": "boolean"
                        },
                        "writeEnable": {
                            "type": "boolean"
                        },
                        "compareOp": {
                            "$ref": "#definitions/compareOp"
                        }
                    },
                    "required": [
                        "enable"
                    ]
                },
                "stencilTest": {
                    "type": "object",
                    "definitions": {
                        "state": {
                            "type": "object",
                            "properties": {
                                "failOp": {
                                    "$ref": "#definitions/stencilOp"
                                },
                                "passOp": {
                                    "$ref": "#definitions/stencilOp"
                                },
                                "depthFailOp": {
                                    "$ref": "#definitions/stencilOp"
                                },
                                "compareOp": {
                                    "$ref": "#definitions/compareOp"
                                },
                                "compareMask": {
                                    "type": "integer",
                                    "minimum": 0
                                },
                                "writeMask": {
                                    "type": "integer",
                                    "minimum": 0
                                },
                                "reference": {
                                    "type": "integer",
                                    "minimum": 0
                                }
                            },
                            "required": [
                                "failOp",
                                "passOp",
                                "depthFailOp",
                                "compareOp",
                                "compareMask",
                                "writeMask"
                            ]
                        }
                    },
                    "properties": {
                        "enable": {
                            "type": "boolean"
                        },
                        "opState": {
                            "type": "object",
                            "properties": {
                                "front": {
                                    "$ref": "#properties/depthStencil/properties/stencilTest/definitions/state"
                                },
                                "back": {
                                    "$ref": "#properties/depthStencil/properties/stencilTest/definitions/state"
                                }
                            }
                        }
                    }
                }
            }
        },
        "blend": {
            "type": "object",
            "properties": {
                "logicOpEnable": {
                    "type": "boolean"
                },
                "logicOp": {
                    "$ref": "#definitions/logicOp"
                },
                "constants": {
                    "type": "object",
                    "properties": {
                        "R": {
                            "type": "number"
                        },
                        "G": {
                            "type": "number"
                        },
                        "B": {
                            "type": "number"
                        },
                        "A": {
                            "type": "number"
                        }
                    }
                },
                "attachments": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "blendEnable": {
                                "type": "boolean"
                            },
                            "color": {
                                "$ref": "#definitions/blendFunc"
                            },
                            "alpha": {
                                "$ref": "#definitions/blendFunc"
                            },
                            "colorWriteMask": {
                                "type": "integer",
                                "description": "A combination of color component. 1->Red, 2->Green, 4->Blue, 8->Alpha",
                                "minimum": 1,
                                "maximum": 15
                            }
                        },
                        "required": [
                            "blendEnable",
                            "colorWriteMask"
                        ]
                    }
                }
            }
        },
        "dynamicState": {
            "type": "array",
            "items": {
                "type": "string",
                "enum": [
                    "Viewport",
                    "Scissor",
                    "LineWidth",
                    "DepthBias",
                    "BlendConstants",
                    "DepthBounds",
                    "StencilCompareMask",
                    "StencilWriteMask",
                    "StencilReference"
                ]
            }
        },
        "pushConstant": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "stage": {
                        "$ref": "#definitions/shaderStage"
                    },
                    "offset": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "size": {
                        "type": "integer",
                        "minimum": 0
                    }
                },
                "required": [
                    "stage",
                    "offset",
                    "size"
                ]
            }
        },
        "descriptorSetLayout": {
            "type": "array",
            "items": {
                "$ref": "#definitions/descriptorSet"
            }
        }
    },
    "required": [
        "shaderStage",
        "vertexInput",
        "inputAssembly",
        "rasterization",
        "descriptorSetLayout"
    ],
    "additionalProperties": false
}